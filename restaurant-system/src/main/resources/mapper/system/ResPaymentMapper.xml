<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.restaurant.system.mapper.ResPaymentMapper">
    
    <resultMap type="ResPayment" id="ResPaymentResult">
        <result property="paymentId"    column="payment_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="paymentTime"    column="payment_time"    />
        <result property="paymentMethod"    column="payment_method"    />
        <result property="amount"    column="amount"    />
        <result property="isDeleted"    column="is_deleted"    />
    </resultMap>

    <sql id="selectResPaymentVo">
        select payment_id, order_id, payment_time, payment_method, amount, is_deleted from res_payment
    </sql>

    <select id="selectResPaymentList" parameterType="ResPayment" resultMap="ResPaymentResult">
        <include refid="selectResPaymentVo"/>
        <where>  
            <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
            <if test="paymentTime != null "> and payment_time = #{paymentTime}</if>
            <if test="paymentMethod != null  and paymentMethod != ''"> and payment_method = #{paymentMethod}</if>
            <if test="amount != null "> and amount = #{amount}</if>
        </where>
    </select>
    
    <select id="selectResPaymentByPaymentId" parameterType="String" resultMap="ResPaymentResult">
        <include refid="selectResPaymentVo"/>
        where payment_id = #{paymentId}
    </select>
        
    <insert id="insertResPayment" parameterType="ResPayment">
        insert into res_payment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="paymentId != null">payment_id,</if>
            <if test="orderId != null and orderId != ''">order_id,</if>
            <if test="paymentTime != null">payment_time,</if>
            <if test="paymentMethod != null and paymentMethod != ''">payment_method,</if>
            <if test="amount != null">amount,</if>
            <if test="isDeleted != null">is_deleted,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="paymentId != null">#{paymentId},</if>
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="paymentTime != null">#{paymentTime},</if>
            <if test="paymentMethod != null and paymentMethod != ''">#{paymentMethod},</if>
            <if test="amount != null">#{amount},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
         </trim>
    </insert>

    <update id="updateResPayment" parameterType="ResPayment">
        update res_payment
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id = #{orderId},</if>
            <if test="paymentTime != null">payment_time = #{paymentTime},</if>
            <if test="paymentMethod != null and paymentMethod != ''">payment_method = #{paymentMethod},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
        </trim>
        where payment_id = #{paymentId}
    </update>

    <delete id="deleteResPaymentByPaymentId" parameterType="String">
        delete from res_payment where payment_id = #{paymentId}
    </delete>

    <delete id="deleteResPaymentByPaymentIds" parameterType="String">
        delete from res_payment where payment_id in 
        <foreach item="paymentId" collection="array" open="(" separator="," close=")">
            #{paymentId}
        </foreach>
    </delete>
</mapper>